@model MovieApp.Models.PopularActorsViewModel
@{
    ViewData["Title"] = "Popüler Aktörler";
}

<div class="container mt-4">
    <h1 class="display-5 text-center">@ViewData["Title"]</h1>
    @if (Model.TotalResults > 0)
    {
        <p class="lead text-muted text-center mb-4">(Toplam @Model.TotalResults.ToString("N0") kişi bulundu - Sayfa @Model.CurrentPage / @Model.TotalPages)</p>
    }

    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.ErrorMessage
        </div>
    }

    <div class="row justify-content-center mb-5">
        <div class="col-md-8 col-lg-6">
            <h4 class="text-center text-muted mb-3">Veya Aktör Ara</h4>
            <form asp-controller="Movies" asp-action="Search" method="get">
                <div class="input-group">
                    <input type="text" name="query" class="form-control" placeholder="Aktör adı girin..." aria-label="Aktör arama metni" required>
                    <button class="btn btn-outline-success" type="submit">
                        <i class="bi bi-search"></i> Ara
                    </button>
                </div>
            </form>
        </div>
    </div>

</div> 


    @if (Model.PopularActors.Any())
    {
        <div class="row row-cols-2 row-cols-sm-3 row-cols-md-4 row-cols-lg-6 g-4">
            @foreach (var actor in Model.PopularActors)
            {
                <div class="col d-flex align-items-stretch">
                    <div class="card h-100 shadow-sm text-center actor-card">
                        <a asp-controller="People" asp-action="Details" asp-route-id="@actor.Id" class="text-decoration-none d-flex flex-column h-100">
                            <div class="pt-3 px-3 d-flex justify-content-center">
                                @if (!string.IsNullOrEmpty(actor.FullProfilePath))
                                {
                                    <img src="@actor.FullProfilePath" class="img-fluid rounded-circle shadow-sm" alt="@actor.Name" style="width: 100px; height: 100px; object-fit: cover;">
                                }
                                else
                                {
                                    <div class="rounded-circle mx-auto d-flex align-items-center justify-content-center bg-light text-secondary shadow-sm" style="width: 100px; height: 100px;">
                                        <i class="bi bi-person-fill fs-1"></i>
                                    </div>
                                }
                            </div>
                            <div class="card-body d-flex flex-column pt-2 pb-2">
                                <h5 class="card-title fs-6 fw-bold mb-0 text-dark flex-grow-1 text-truncate" title="@actor.Name">
                                    @actor.Name
                                </h5>
                                @if (!string.IsNullOrEmpty(actor.KnownForDepartment))
                                {
                                    <small class="card-text text-muted mt-1">(@(actor.KnownForDepartment == "Acting" ? "Oyuncu" : actor.KnownForDepartment == "Directing" ? "Yönetmen" : actor.KnownForDepartment))</small>
                                }
                            </div>
                        </a>
                    </div>
                </div>
            }
        </div>

        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Popüler Aktörler Sayfaları" class="mt-5 d-flex justify-content-center">
                <ul class="pagination">
                    <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" aria-label="Önceki">«</a>
                    </li>

                    @{
                        int maxPagesToShow = 7;
                        int startPage = Math.Max(1, Model.CurrentPage - (maxPagesToShow / 2));
                        int endPage = Math.Min(Model.TotalPages, startPage + maxPagesToShow - 1);
                        if (endPage - startPage + 1 < maxPagesToShow) { startPage = Math.Max(1, endPage - maxPagesToShow + 1); }

                        if (startPage > 1)
                        {
                            <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="1">1</a></li> @if (startPage > 2)
                            {
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            }                  }
                        for (int i = startPage; i <= endPage; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")"><a class="page-link" asp-action="Index" asp-route-page="@i">@i</a></li>
                        }
                        if (endPage < Model.TotalPages)
                        { @if (endPage < Model.TotalPages - 1)
                            {
                                <li class="page-item disabled"><span class="page-link">...</span></li>
                            }
                            <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages">@Model.TotalPages</a></li>
                        }
                    }

                    <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" aria-label="Sonraki">»</a>
                    </li>
                </ul>
            </nav>
        }
    }
    else if (string.IsNullOrEmpty(ViewBag.ErrorMessage)) 
    {
        <div class="alert alert-light text-center" role="alert">
            Gösterilecek popüler aktör bulunamadı.
        </div>
    }

    <hr class="my-5"> 

@section Styles {
    <style>
        .actor-card .card-body {
            font-size: 0.9rem;
			width: 150px;
        }

        .actor-card img, .actor-card .rounded-circle {
            transition: transform 0.2s ease-in-out;
        }

        .actor-card a:hover img, .actor-card a:hover .rounded-circle {
            transform: scale(1.05);
        }
    </style>
}